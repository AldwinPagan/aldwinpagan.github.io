{"version":3,"sources":["webpack:///./src/components/ui/Timeline/styles.ts","webpack:///./src/components/ui/Timeline/index.tsx","webpack:///./src/components/Experience/index.tsx","webpack:///./src/components/Education/index.tsx","webpack:///./src/components/ui/ProgressBar/styles.ts","webpack:///./src/components/ui/ProgressBar/index.tsx","webpack:///./src/components/Skills/styles.ts","webpack:///./src/components/Skills/index.tsx","webpack:///./src/pages/resume.tsx","webpack:///./src/components/ui/TitleSection/styles.ts","webpack:///./src/components/ui/TitleSection/index.tsx","webpack:///./src/components/utils/FormatHtml/index.tsx"],"names":["Timeline","styled","div","Details","Content","Title","Subtitle","Date","Point","span","title","subtitle","content","startDate","endDate","Experience","useStaticQuery","markdownRemark","allMarkdownRemark","sectionTitle","frontmatter","experiences","edges","Container","section","TitleSection","map","item","node","id","html","company","position","key","FormatHtml","Education","education","university","degree","ProgressBar","BarWrapper","Bar","percentage","h3","Percentage","Skills","Skill","skills","center","ResumePage","Layout","SEO","h2","SubTitle","h4","Separator","className","dangerouslySetInnerHTML","__html"],"mappings":"4KAGaA,EAAWC,IAAOC,IAAV,uEAAGD,CAAH,2BACf,sLAGE,qBAIKE,EAAUF,IAAOC,IAAV,sEAAGD,CAAH,SACd,iEAGOG,EAAUH,IAAOC,IAAV,sEAAGD,CAAH,SACd,gGAGOI,EAAQJ,IAAOC,IAAV,oEAAGD,CAAH,SACZ,wCAGOK,EAAWL,IAAOC,IAAV,uEAAGD,CAAH,SACf,sBAGOM,EAAON,IAAOC,IAAV,mEAAGD,CAAH,2BACX,+HAIOO,EAAQP,IAAOQ,KAAV,oEAAGR,CAAH,4BACZ,gJCPSD,EAdmB,SAAC,GAAD,IAAGU,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAUC,EAApB,EAAoBA,QAASC,EAA7B,EAA6BA,UAAWC,EAAxC,EAAwCA,QAAxC,OAChC,kBAAC,EAAD,KACE,kBAAC,EAAD,MACA,kBAAC,EAAD,KACE,kBAAC,EAAD,KACGD,EADH,MACiBC,GAEjB,kBAAC,EAAD,KAAeJ,GACf,kBAAC,EAAD,KAAkBC,IAEpB,kBAAC,EAAD,KAAiBC,K,oCC2DNG,EA1Dc,WAC3B,MAA8CC,yBAAe,cAArDC,EAAR,EAAQA,eAAgBC,EAAxB,EAAwBA,kBA4BlBC,EAA6BF,EAAeG,YAC5CC,EAA4BH,EAAkBI,MAEpD,OACE,kBAACC,EAAA,EAAD,CAAWC,SAAO,GAChB,kBAACC,EAAA,EAAD,CAAcf,MAAOS,EAAaT,MAAOC,SAAUQ,EAAaR,WAE/DU,EAAYK,KAAI,SAACC,GAChB,MAIIA,EAAKC,KAHPC,EADF,EACEA,GACAC,EAFF,EAEEA,KAFF,IAGEV,YAAeW,EAHjB,EAGiBA,QAASC,EAH1B,EAG0BA,SAAUnB,EAHpC,EAGoCA,UAAWC,EAH/C,EAG+CA,QAG/C,OACE,kBAAC,EAAD,CACEmB,IAAKJ,EACLnB,MAAOqB,EACPpB,SAAUqB,EACVpB,QAAS,kBAACsB,EAAA,EAAD,CAAYtB,QAASkB,IAC9BjB,UAAWA,EACXC,QAASA,SCQNqB,EA1Da,WAC1B,MAA8CnB,yBAAe,cAArDC,EAAR,EAAQA,eAAgBC,EAAxB,EAAwBA,kBA4BlBC,EAA6BF,EAAeG,YAC5CgB,EAAyBlB,EAAkBI,MAEjD,OACE,kBAACC,EAAA,EAAD,CAAWC,SAAO,GAChB,kBAACC,EAAA,EAAD,CAAcf,MAAOS,EAAaT,MAAOC,SAAUQ,EAAaR,WAE/DyB,EAAUV,KAAI,SAACC,GACd,MAIIA,EAAKC,KAHPC,EADF,EACEA,GACAC,EAFF,EAEEA,KAFF,IAGEV,YAAeiB,EAHjB,EAGiBA,WAAYC,EAH7B,EAG6BA,OAAQzB,EAHrC,EAGqCA,UAAWC,EAHhD,EAGgDA,QAGhD,OACE,kBAAC,EAAD,CACEmB,IAAKJ,EACLnB,MAAO2B,EACP1B,SAAU2B,EACV1B,QAAS,kBAACsB,EAAA,EAAD,CAAYtB,QAASkB,IAC9BjB,UAAWA,EACXC,QAASA,SClERyB,EAActC,IAAOC,IAAV,0EAAGD,CAAH,SAClB,qBAGOuC,EAAavC,IAAOC,IAAV,yEAAGD,CAAH,SACjB,uHAGOwC,EAAMxC,IAAOC,IAAV,kEAAGD,CAAH,mBACV,6CACK,qBAAGyC,WAAH,OAGEtC,EAAUH,IAAOC,IAAV,sEAAGD,CAAH,SACd,8DAGOI,EAAQJ,IAAO0C,GAAV,oEAAG1C,CAAH,SACZ,oBAGO2C,EAAa3C,IAAO0C,GAAV,yEAAG1C,CAAH,SACjB,oBCTSsC,EAZsB,SAAC,GAAD,IAAG7B,EAAH,EAAGA,MAAOgC,EAAV,EAAUA,WAAV,OACnC,kBAAC,EAAD,KACE,kBAAC,EAAD,KACE,kBAAC,EAAD,KAAehC,GACf,kBAAC,EAAD,KAAoBgC,EAApB,MAEF,kBAAC,EAAD,KACE,kBAAC,EAAD,CAAYA,WAAYA,OCZjBG,EAAS5C,IAAOC,IAAV,qEAAGD,CAAH,SACb,+CAGO6C,EAAQ7C,IAAOC,IAAV,oEAAGD,CAAH,SACZ,0DC4DS4C,EA/CU,WACvB,MAA8C7B,yBAAe,cAArDC,EAAR,EAAQA,eAAgBC,EAAxB,EAAwBA,kBAsBlBC,EAA6BF,EAAeG,YAC5C2B,EAAkB7B,EAAkBI,MAE1C,OACE,kBAACC,EAAA,EAAD,CAAWC,SAAO,GAChB,kBAACC,EAAA,EAAD,CAAcf,MAAOS,EAAaT,MAAOC,SAAUQ,EAAaR,SAAUqC,QAAM,IAChF,kBAAC,EAAD,KACGD,EAAOrB,KAAI,SAACC,GACX,MAGIA,EAAKC,KAFPC,EADF,EACEA,GADF,IAEET,YAAeV,EAFjB,EAEiBA,MAAOgC,EAFxB,EAEwBA,WAGxB,OACE,kBAAC,EAAD,CAAcT,IAAKJ,GACjB,kBAAC,EAAD,CAAanB,MAAOA,EAAOgC,WAAYA,WCxCtCO,UAXc,kBAC3B,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKzC,MAAM,WACX,kBAAC,EAAD,MACA,6BACA,kBAAC,EAAD,MACA,6BACA,kBAAC,EAAD,S,uECRSe,EAAexB,IAAOC,IAAV,0EAAGD,CAAH,SACnB,sDAGOI,EAAQJ,IAAOmD,GAAV,mEAAGnD,CAAH,aACZ,oHACF,qBAAG+C,QAAyB,wBAGnBK,EAAWpD,IAAOqD,GAAV,sEAAGrD,CAAH,aACf,oEACF,qBAAG+C,QAAyB,wBAGnBO,EAAYtD,IAAOmD,GAAV,uEAAGnD,CAAH,8DAChB,8FACF,qBAAG+C,QAAyB,yCAIxB,mFAKA,kGCdOvB,IARuB,SAAC,GAAD,IAAGuB,EAAH,EAAGA,OAAQtC,EAAX,EAAWA,MAAOC,EAAlB,EAAkBA,SAAlB,OACpC,kBAAC,EAAD,KACGA,GAAY,kBAAC,EAAD,CAAiBqC,OAAQA,GAAStC,GAC/C,kBAAC,EAAD,CAAcsC,OAAQA,GAASrC,GAC/B,kBAAC,EAAD,CAAkBqC,OAAQA,O,oCCd9B,yBAeed,IATqB,SAAC,GAAD,IAAGtB,EAAH,EAAGA,QAAH,OAClC,0BACE4C,UAAU,cACVC,wBAAyB,CACvBC,OAAQ9C","file":"component---src-pages-resume-tsx-c1aa6b9b6d9946827d08.js","sourcesContent":["import styled from 'styled-components';\r\nimport tw from 'tailwind.macro';\r\n\r\nexport const Timeline = styled.div`\r\n  ${tw`flex flex-col sm:flex-row w-full p-4 relative border-l border-indigo-200`};\r\n\r\n  &:last-child {\r\n    ${tw`pb-0`};\r\n  }\r\n`;\r\n\r\nexport const Details = styled.div`\r\n  ${tw`w-full sm:w-1/3`};\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  ${tw`w-full sm:w-2/3 mt-4 sm:mt-0`};\r\n`;\r\n\r\nexport const Title = styled.div`\r\n  ${tw`font-semibold mt-3`};\r\n`;\r\n\r\nexport const Subtitle = styled.div`\r\n  ${tw`text-xs`};\r\n`;\r\n\r\nexport const Date = styled.div`\r\n  ${tw`text-xs border  border-teal-400 rounded-full px-2`};\r\n  width: fit-content;\r\n`;\r\n\r\nexport const Point = styled.span`\r\n  ${tw`w-3 h-3 border border-indigo-200 bg-indigo-100 rounded-full absolute`};\r\n  left: -6px;\r\n  top: 20px;\r\n`;\r\n","import React from 'react';\r\n\r\nimport * as Styled from './styles';\r\n\r\ninterface Props {\r\n  title: string;\r\n  subtitle: string;\r\n  content: React.ReactNode;\r\n  startDate: string;\r\n  endDate: string;\r\n}\r\n\r\nconst Timeline: React.FC<Props> = ({ title, subtitle, content, startDate, endDate }) => (\r\n  <Styled.Timeline>\r\n    <Styled.Point />\r\n    <Styled.Details>\r\n      <Styled.Date>\r\n        {startDate} - {endDate}\r\n      </Styled.Date>\r\n      <Styled.Title>{title}</Styled.Title>\r\n      <Styled.Subtitle>{subtitle}</Styled.Subtitle>\r\n    </Styled.Details>\r\n    <Styled.Content>{content}</Styled.Content>\r\n  </Styled.Timeline>\r\n);\r\n\r\nexport default Timeline;\r\n","import React from 'react';\r\nimport { useStaticQuery, graphql } from 'gatsby';\r\n\r\nimport Timeline from 'components/ui/Timeline';\r\nimport Container from 'components/ui/Container';\r\nimport TitleSection from 'components/ui/TitleSection';\r\nimport FormatHtml from 'components/utils/FormatHtml';\r\n\r\nimport { SectionTitle } from 'helpers/definitions';\r\n\r\ninterface Experience {\r\n  node: {\r\n    id: string;\r\n    html: React.ReactNode;\r\n    frontmatter: {\r\n      company: string;\r\n      position: string;\r\n      startDate: string;\r\n      endDate: string;\r\n    };\r\n  };\r\n}\r\n\r\nconst Experience: React.FC = () => {\r\n  const { markdownRemark, allMarkdownRemark } = useStaticQuery(graphql`\r\n    query {\r\n      markdownRemark(frontmatter: { category: { eq: \"experiences section\" } }) {\r\n        frontmatter {\r\n          title\r\n          subtitle\r\n        }\r\n      }\r\n      allMarkdownRemark(\r\n        filter: { frontmatter: { category: { eq: \"experiences\" } } }\r\n        sort: { order: DESC, fields: fileAbsolutePath }\r\n      ) {\r\n        edges {\r\n          node {\r\n            id\r\n            html\r\n            frontmatter {\r\n              company\r\n              position\r\n              startDate\r\n              endDate\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `);\r\n\r\n  const sectionTitle: SectionTitle = markdownRemark.frontmatter;\r\n  const experiences: Experience[] = allMarkdownRemark.edges;\r\n\r\n  return (\r\n    <Container section>\r\n      <TitleSection title={sectionTitle.title} subtitle={sectionTitle.subtitle} />\r\n\r\n      {experiences.map((item) => {\r\n        const {\r\n          id,\r\n          html,\r\n          frontmatter: { company, position, startDate, endDate }\r\n        } = item.node;\r\n\r\n        return (\r\n          <Timeline\r\n            key={id}\r\n            title={company}\r\n            subtitle={position}\r\n            content={<FormatHtml content={html} />}\r\n            startDate={startDate}\r\n            endDate={endDate}\r\n          />\r\n        );\r\n      })}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Experience;\r\n","import React from 'react';\r\nimport { useStaticQuery, graphql } from 'gatsby';\r\n\r\nimport Timeline from 'components/ui/Timeline';\r\nimport Container from 'components/ui/Container';\r\nimport TitleSection from 'components/ui/TitleSection';\r\nimport FormatHtml from 'components/utils/FormatHtml';\r\n\r\nimport { SectionTitle } from 'helpers/definitions';\r\n\r\ninterface Education {\r\n  node: {\r\n    id: string;\r\n    html: React.ReactNode;\r\n    frontmatter: {\r\n      university: string;\r\n      degree: string;\r\n      startDate: string;\r\n      endDate: string;\r\n    };\r\n  };\r\n}\r\n\r\nconst Education: React.FC = () => {\r\n  const { markdownRemark, allMarkdownRemark } = useStaticQuery(graphql`\r\n    query {\r\n      markdownRemark(frontmatter: { category: { eq: \"education section\" } }) {\r\n        frontmatter {\r\n          title\r\n          subtitle\r\n        }\r\n      }\r\n      allMarkdownRemark(\r\n        filter: { frontmatter: { category: { eq: \"education\" } } }\r\n        sort: { order: DESC, fields: fileAbsolutePath }\r\n      ) {\r\n        edges {\r\n          node {\r\n            id\r\n            html\r\n            frontmatter {\r\n              university\r\n              degree\r\n              startDate\r\n              endDate\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `);\r\n\r\n  const sectionTitle: SectionTitle = markdownRemark.frontmatter;\r\n  const education: Education[] = allMarkdownRemark.edges;\r\n\r\n  return (\r\n    <Container section>\r\n      <TitleSection title={sectionTitle.title} subtitle={sectionTitle.subtitle} />\r\n\r\n      {education.map((item) => {\r\n        const {\r\n          id,\r\n          html,\r\n          frontmatter: { university, degree, startDate, endDate }\r\n        } = item.node;\r\n\r\n        return (\r\n          <Timeline\r\n            key={id}\r\n            title={university}\r\n            subtitle={degree}\r\n            content={<FormatHtml content={html} />}\r\n            startDate={startDate}\r\n            endDate={endDate}\r\n          />\r\n        );\r\n      })}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Education;\r\n","import styled from 'styled-components';\r\nimport tw from 'tailwind.macro';\r\n\r\nexport interface StyledProps {\r\n  percentage: number;\r\n}\r\n\r\nexport const ProgressBar = styled.div`\r\n  ${tw`p-3`};\r\n`;\r\n\r\nexport const BarWrapper = styled.div`\r\n  ${tw`w-full h-2 bg-gray-300 rounded overflow-hidden mt-1`};\r\n`;\r\n\r\nexport const Bar = styled.div<StyledProps>`\r\n  ${tw`h-2 bg-teal-400`};\r\n  width: ${({ percentage }) => `${percentage}%`};\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  ${tw`w-full flex justify-between`};\r\n`;\r\n\r\nexport const Title = styled.h3`\r\n  ${tw`font-semibold`};\r\n`;\r\n\r\nexport const Percentage = styled.h3`\r\n  ${tw`font-semibold`};\r\n`;\r\n","import React from 'react';\r\n\r\nimport * as Styled from './styles';\r\n\r\ninterface Props extends Styled.StyledProps {\r\n  title: string;\r\n}\r\n\r\nconst ProgressBar: React.FC<Props> = ({ title, percentage }) => (\r\n  <Styled.ProgressBar>\r\n    <Styled.Content>\r\n      <Styled.Title>{title}</Styled.Title>\r\n      <Styled.Percentage>{percentage}%</Styled.Percentage>\r\n    </Styled.Content>\r\n    <Styled.BarWrapper>\r\n      <Styled.Bar percentage={percentage} />\r\n    </Styled.BarWrapper>\r\n  </Styled.ProgressBar>\r\n);\r\n\r\nexport default ProgressBar;\r\n","import styled from 'styled-components';\r\nimport tw from 'tailwind.macro';\r\n\r\nexport const Skills = styled.div`\r\n  ${tw`flex flex-wrap w-full`};\r\n`;\r\n\r\nexport const Skill = styled.div`\r\n  ${tw`w-full sm:w-1/2`};\r\n`;\r\n","import React from 'react';\r\nimport { useStaticQuery, graphql } from 'gatsby';\r\n\r\nimport Container from 'components/ui/Container';\r\nimport TitleSection from 'components/ui/TitleSection';\r\nimport ProgressBar from 'components/ui/ProgressBar';\r\n\r\nimport { SectionTitle } from 'helpers/definitions';\r\n\r\nimport * as Styled from './styles';\r\n\r\ninterface Skill {\r\n  node: {\r\n    id: string;\r\n    frontmatter: {\r\n      title: string;\r\n      percentage: number;\r\n    };\r\n  };\r\n}\r\n\r\nconst Skills: React.FC = () => {\r\n  const { markdownRemark, allMarkdownRemark } = useStaticQuery(graphql`\r\n    query {\r\n      markdownRemark(frontmatter: { category: { eq: \"skills section\" } }) {\r\n        frontmatter {\r\n          title\r\n          subtitle\r\n        }\r\n      }\r\n      allMarkdownRemark(filter: { frontmatter: { category: { eq: \"skills\" } } }, sort: { fields: fileAbsolutePath }) {\r\n        edges {\r\n          node {\r\n            id\r\n            frontmatter {\r\n              title\r\n              percentage\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `);\r\n\r\n  const sectionTitle: SectionTitle = markdownRemark.frontmatter;\r\n  const skills: Skill[] = allMarkdownRemark.edges;\r\n\r\n  return (\r\n    <Container section>\r\n      <TitleSection title={sectionTitle.title} subtitle={sectionTitle.subtitle} center />\r\n      <Styled.Skills>\r\n        {skills.map((item) => {\r\n          const {\r\n            id,\r\n            frontmatter: { title, percentage }\r\n          } = item.node;\r\n\r\n          return (\r\n            <Styled.Skill key={id}>\r\n              <ProgressBar title={title} percentage={percentage} />\r\n            </Styled.Skill>\r\n          );\r\n        })}\r\n      </Styled.Skills>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Skills;\r\n","import React from 'react';\r\n\r\nimport Layout from 'components/Layout';\r\nimport SEO from 'components/SEO';\r\nimport Experience from 'components/Experience';\r\nimport Education from 'components/Education';\r\nimport Skills from 'components/Skills';\r\n\r\nconst ResumePage: React.FC = () => (\r\n  <Layout>\r\n    <SEO title=\"Resume\" />\r\n    <Experience />\r\n    <hr />\r\n    <Education />\r\n    <hr />\r\n    <Skills />\r\n  </Layout>\r\n);\r\n\r\nexport default ResumePage;\r\n","import styled from 'styled-components';\r\nimport tw from 'tailwind.macro';\r\n\r\nexport interface StyledProps {\r\n  center?: boolean;\r\n}\r\n\r\nexport const TitleSection = styled.div`\r\n  ${tw`flex flex-col w-full`};\r\n`;\r\n\r\nexport const Title = styled.h2<StyledProps>`\r\n  ${tw`uppercase mb-4 text-lg font-bold w-full text-left`};\r\n  ${({ center }) => center && tw`text-center`};\r\n`;\r\n\r\nexport const SubTitle = styled.h4<StyledProps>`\r\n  ${tw`text-xs text-indigo-600 w-full text-left`};\r\n  ${({ center }) => center && tw`text-center`};\r\n`;\r\n\r\nexport const Separator = styled.h2<StyledProps>`\r\n  ${tw`relative w-2 h-8 mb-6 -mt-2`};\r\n  ${({ center }) => center && tw`mx-auto`};\r\n\r\n  &:before {\r\n    content: '';\r\n    ${tw`bg-indigo-500 h-full w-px absolute left-0`};\r\n  }\r\n\r\n  &:after {\r\n    content: '';\r\n    ${tw`bg-teal-400 h-6 w-px absolute ml-1`};\r\n  }\r\n`;\r\n","import React from 'react';\r\n\r\nimport * as Styled from './styles';\r\nimport { StyledProps } from './styles';\r\n\r\ninterface Props extends StyledProps {\r\n  title: string;\r\n  subtitle?: string;\r\n}\r\n\r\nconst TitleSection: React.FC<Props> = ({ center, title, subtitle }) => (\r\n  <Styled.TitleSection>\r\n    {subtitle && <Styled.SubTitle center={center}>{title}</Styled.SubTitle>}\r\n    <Styled.Title center={center}>{subtitle}</Styled.Title>\r\n    <Styled.Separator center={center} />\r\n  </Styled.TitleSection>\r\n);\r\n\r\nexport default TitleSection;\r\n","import React, { ReactNode } from 'react';\r\n\r\ninterface Props {\r\n  content: any;\r\n}\r\n\r\nconst FormatHtml: React.FC<Props> = ({ content }) => (\r\n  <span\r\n    className=\"format-html\"\r\n    dangerouslySetInnerHTML={{\r\n      __html: content\r\n    }}\r\n  />\r\n);\r\n\r\nexport default FormatHtml;\r\n"],"sourceRoot":""}